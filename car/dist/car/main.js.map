{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/carform1/carform1.component.css","webpack:///./src/app/carform1/carform1.component.html","webpack:///./src/app/carform1/carform1.component.ts","webpack:///./src/app/carform2/carform2.component.css","webpack:///./src/app/carform2/carform2.component.html","webpack:///./src/app/carform2/carform2.component.ts","webpack:///./src/app/feedback/feedback.component.css","webpack:///./src/app/feedback/feedback.component.html","webpack:///./src/app/feedback/feedback.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Carform1Component } from './carform1/carform1.component';\nimport { Carform2Component } from './carform2/carform2.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\n\nconst routes: Routes = [\n  {path: \"\", component: Carform1Component},\n  {path:\"part2\",component: Carform2Component},\n  {path:\"feedback\",component: FeedbackComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Carform1Component } from './carform1/carform1.component';\nimport { Carform2Component } from './carform2/carform2.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { HttpService } from './http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Carform1Component,\n    Carform2Component,\n    FeedbackComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<p>* Required Fields </p>\\n<form #formpart1=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart1)\\\">\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">*Make: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Make\\\" placeholder=\\\"Make\\\" ngModel name=\\\"Make\\\" required>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">*Model</label>\\n    <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" ngModel name=\\\"Model\\\" required>\\n      <option value=\\\"Civic\\\">Civic</option>\\n      <option value=\\\"Odyseey\\\">Odyseey</option>\\n      <option value=\\\"Pilot\\\">Pilot</option>\\n      <option value=\\\"Accord\\\">Accord</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">*Year: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Year\\\" placeholder=\\\"Year\\\" ngModel name=\\\"Year\\\" required>\\n    </div>\\n  </div>\\n  <fieldset class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <legend class=\\\"col-form-label col-sm-2 pt-0\\\">*Type: </legend>\\n      <div class=\\\"col-sm-10\\\">\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"Type\\\" id=\\\"Sedan\\\" value=\\\"Sedan\\\" ngModel required>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios1\\\">\\n             Sedan\\n          </label>\\n        </div>\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"Type\\\" id=\\\"Coupe\\\" value=\\\"Coupe\\\" ngModel required>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios2\\\">\\n            Coupe\\n          </label>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </fieldset>\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">next</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-carform1',\n  templateUrl: './carform1.component.html',\n  styleUrls: ['./carform1.component.css']\n})\nexport class Carform1Component implements OnInit {\n\n  constructor(private router: Router, private http: HttpService) { }\n\n  ngOnInit() {\n  }\n\n  signin(form) {\n    this.http.setForm(form.value)\n    console.log(Object.keys(form.value))\n      for(let val of Object.keys(form.value)){\n        console.log(val)\n        if(form.value[''+val+''].length === 0){\n          window.alert(\"enter all required fields\")\n          return;\n        }\n      }\n\n    this.router.navigateByUrl('/part2')\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form #formpart2=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart2)\\\">\\n<h5>Features</h5>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"GPS\\\" id=\\\"GPS\\\" ngModel name=\\\"GPS\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"GPS\\\">\\n     GPS\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Security Lock\\\" id=\\\"Security Lock\\\" ngModel name=\\\"Security Lock\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"Security Lock\\\">\\n     Security Lock\\n  </label>\\n</div>\\n<div class=\\\"form-check\\\">\\n  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Cargo Mat\\\" id=\\\"Cargo Mat\\\" ngModel name=\\\"Cargo Mat\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"Cargo Mat\\\">\\n     Cargo Mat\\n  </label>\\n</div>\\n\\n<div class=\\\"form-group row\\\">\\n  <label for=\\\"PurchaseDate\\\" class=\\\"col-sm-2 col-form-label\\\">Purchased Date: </label>\\n  <div class=\\\"col-sm-5\\\">\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"PurchaseDate\\\" placeholder=\\\"PurchaseDate\\\" ngModel name=\\\"PurchaseDate\\\">\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"col-sm-10\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-carform2',\n  templateUrl: './carform2.component.html',\n  styleUrls: ['./carform2.component.css']\n})\nexport class Carform2Component implements OnInit {\n\n  constructor(private router: Router, private http: HttpService) { }\n\n  ngOnInit() {\n  }\n\n  signin(form) {\n    var formpart1 = this.http.getForm()\n    var Features = []\n    if (form.value.GPS) {\n      Features.push('GPS')\n    }\n    if (form.value['Security Lock']) {\n      Features.push('Security Lock')\n    }\n    if (form.value['Cargo Mat']) {\n      Features.push('Cargo Mat')\n    }\n    form.value.Features = Features\n    this.http.setForm({ ...formpart1, ...form.value })\n    this.http.postService().subscribe(\n      res => {\n        console.log(res)\n        this.router.navigateByUrl('/feedback')\n      },\n      err => {\n        console.log(err)\n      }\n    )\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<p>The User selected the following input:</p>\\n<p>{{ formData.Make }} {{ formData.Model }} {{ formData.Year }} {{ formData.Type }}</p>\\n<p>with {{ formData.Features }} accessories on {{ formData.PurchaseDate}}</p>\\n<p> The User will get {{ discount }}% discount</p>\\n\\n<button (click)=\\\"addmore()\\\">Add More</button>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  discount = 0\n  formData = {}\n  constructor(private router: Router,private http: HttpService) { }\n\n  ngOnInit() {\n    this.formData = this.http.getForm()\n    var date = new Date(this.formData['PurchaseDate']);\n    console.log(date.getDate() % 2)\n    this.discount = date.getDate()%2 == 0 ? 30 : 40\n    console.log(this.formData)\n  }\n\n  addmore(){\n     this.router.navigateByUrl('/')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  form = {}\n\n  constructor(private http: Http) { }\n\n  setForm(form) {\n    this.form = form\n    console.log(this.form)\n  }\n  getForm() {\n    return this.form\n  }\n  postService() {\n    return this.http.post('/', this.form)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}